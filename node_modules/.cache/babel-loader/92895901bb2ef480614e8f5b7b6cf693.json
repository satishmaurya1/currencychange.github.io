{"ast":null,"code":"var _jsxFileName = \"D:\\\\reacttut\\\\awesomeapp\\\\src\\\\App.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport './index.css';\nimport CurrencyRow from './CurrencyRow';\nconst BASE_URL = ' https://api.ratesapi.io/api/latest';\n\nconst App = () => {\n  const [currencyOptions, setCurrencyOptions] = useState([]);\n  const [fromCurrency, setFromCurrency] = useState();\n  const [toCurrency, setToCurrency] = useState();\n  const [exchangeRate, setExchangeRate] = useState();\n  const [amount, setAmount] = useState();\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true);\n  let toAmount, fromAmount;\n\n  if (amountInFromCurrency) {\n    fromAmount = amount;\n    toAmount = amount * exchangeRate;\n  } else {\n    toAmount = amount;\n    fromAmount = amount / exchangeRate;\n  }\n\n  useEffect(() => {\n    fetch(BASE_URL).then(res => res.json()).then(data => {\n      const firstCurrency = Object.keys(data.rates)[0];\n      setCurrencyOptions([data.base, ...Object.keys(data.rates)]);\n      setFromCurrency(data.base);\n      setToCurrency(firstCurrency);\n      setExchangeRate(data.rates[firstCurrency]);\n    });\n  }, []);\n\n  function handleToAmountChange(event) {\n    setAmount(event.target.value);\n    setAmountInFromCurrency(false);\n  }\n\n  function handleFromAmountChange(event) {\n    setAmount(event.target.value);\n    setAmountInFromCurrency(fals);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Convert\"), /*#__PURE__*/React.createElement(CurrencyRow, {\n    currencyOptions: currencyOptions,\n    selectCurrency: fromCurrency,\n    onChangeCurrency: e => setFromCurrency(e.target.value),\n    amount: fromAmount,\n    onChangeAmount: handleFromAmountChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"equal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"=\"), /*#__PURE__*/React.createElement(CurrencyRow, {\n    currencyOptions: currencyOptions,\n    selectCurrency: toCurrency,\n    onChangeCurrency: e => setToCurrency(e.target.value),\n    amount: toAmount,\n    onChangeAmount: handleToAmountChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["D:/reacttut/awesomeapp/src/App.jsx"],"names":["React","useEffect","useState","CurrencyRow","BASE_URL","App","currencyOptions","setCurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","amount","setAmount","amountInFromCurrency","setAmountInFromCurrency","toAmount","fromAmount","fetch","then","res","json","data","firstCurrency","Object","keys","rates","base","handleToAmountChange","event","target","value","handleFromAmountChange","fals","e"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from 'react';\r\nimport './index.css';\r\nimport CurrencyRow from './CurrencyRow';\r\n\r\n\r\nconst BASE_URL=' https://api.ratesapi.io/api/latest';\r\n\r\n\r\nconst App = () => {\r\n    const [currencyOptions,setCurrencyOptions]=useState([])\r\n\r\n    const [fromCurrency,setFromCurrency]=useState();\r\n    const [toCurrency,setToCurrency]=useState();\r\n    const [exchangeRate,setExchangeRate]=useState();\r\n    const [amount,setAmount]=useState();\r\n    const [amountInFromCurrency,setAmountInFromCurrency]=useState(true);\r\n\r\n\r\n    let toAmount,fromAmount\r\n\r\n    if(amountInFromCurrency){\r\n        fromAmount=amount\r\n        toAmount=amount * exchangeRate\r\n    }else{\r\n        toAmount=amount\r\n        fromAmount=amount / exchangeRate\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        fetch(BASE_URL)\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n            const firstCurrency=Object.keys(data.rates)[0]\r\n            setCurrencyOptions([data.base,...Object.keys(data.rates)])\r\n            setFromCurrency(data.base)\r\n            setToCurrency(firstCurrency)\r\n            setExchangeRate(data.rates[firstCurrency])\r\n        })\r\n    },[])\r\n\r\n    function handleToAmountChange(event){\r\n        setAmount(event.target.value)\r\n        setAmountInFromCurrency(false)\r\n    }\r\n\r\n    function handleFromAmountChange(event){\r\n        setAmount(event.target.value)\r\n        setAmountInFromCurrency(fals)\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h1>Convert</h1>\r\n\r\n            <CurrencyRow \r\n                currencyOptions={currencyOptions}\r\n                selectCurrency={fromCurrency}\r\n                onChangeCurrency={e=>setFromCurrency(e.target.value)}\r\n                amount={fromAmount}\r\n                onChangeAmount={handleFromAmountChange}\r\n            />\r\n            <div className='equal'>=</div>\r\n            <CurrencyRow \r\n                currencyOptions={currencyOptions}\r\n                selectCurrency={toCurrency}\r\n                onChangeCurrency={e=>setToCurrency(e.target.value)}\r\n                amount={toAmount}\r\n                onChangeAmount={handleToAmountChange}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}