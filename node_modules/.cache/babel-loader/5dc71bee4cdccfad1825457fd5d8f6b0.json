{"ast":null,"code":"var _jsxFileName = \"D:\\\\reacttut\\\\awesomeapp\\\\src\\\\App.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport './index.css';\nimport CurrencyRow from './CurrencyRow';\nconst BASE_URL = ' https://api.ratesapi.io/api/latest';\n\nconst App = () => {\n  const [currencyOptions, setCurrencyOptions] = useState([]);\n  const [fromCurrency, setFromCurrency] = useState();\n  const [toCurrency, setToCurrency] = useState();\n  const [exchangeRate, setExchangeRate] = useState();\n  const [amount, setAmount] = useState();\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(t);\n  let toAmount, fromAmount;\n  if (amountInFromCurrency) useEffect(() => {\n    fetch(BASE_URL).then(res => res.json()).then(data => {\n      const firstCurrency = Object.keys(data.rates)[0];\n      setCurrencyOptions([data.base, ...Object.keys(data.rates)]);\n      setFromCurrency(data.base);\n      setToCurrency(firstCurrency);\n      setExchangeRate(data.rates[firstCurrency]);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"Convert\"), /*#__PURE__*/React.createElement(CurrencyRow, {\n    currencyOptions: currencyOptions,\n    selectCurrency: fromCurrency,\n    onChangeCurrency: e => setFromCurrency(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"equal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"=\"), /*#__PURE__*/React.createElement(CurrencyRow, {\n    currencyOptions: currencyOptions,\n    selectCurrency: toCurrency,\n    onChangeCurrency: e => setToCurrency(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["D:/reacttut/awesomeapp/src/App.jsx"],"names":["React","useEffect","useState","CurrencyRow","BASE_URL","App","currencyOptions","setCurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","amount","setAmount","amountInFromCurrency","setAmountInFromCurrency","t","toAmount","fromAmount","fetch","then","res","json","data","firstCurrency","Object","keys","rates","base","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAO,aAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAGA,MAAMC,QAAQ,GAAC,qCAAf;;AAGA,MAAMC,GAAG,GAAG,MAAM;AACd,QAAM,CAACC,eAAD,EAAiBC,kBAAjB,IAAqCL,QAAQ,CAAC,EAAD,CAAnD;AAEA,QAAM,CAACM,YAAD,EAAcC,eAAd,IAA+BP,QAAQ,EAA7C;AACA,QAAM,CAACQ,UAAD,EAAYC,aAAZ,IAA2BT,QAAQ,EAAzC;AACA,QAAM,CAACU,YAAD,EAAcC,eAAd,IAA+BX,QAAQ,EAA7C;AACA,QAAM,CAACY,MAAD,EAAQC,SAAR,IAAmBb,QAAQ,EAAjC;AACA,QAAM,CAACc,oBAAD,EAAsBC,uBAAtB,IAA+Cf,QAAQ,CAACgB,CAAD,CAA7D;AAGA,MAAIC,QAAJ,EAAaC,UAAb;AAEA,MAAGJ,oBAAH,EAGAf,SAAS,CAAC,MAAI;AACVoB,IAAAA,KAAK,CAACjB,QAAD,CAAL,CACCkB,IADD,CACMC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EADX,EAECF,IAFD,CAEMG,IAAI,IAAE;AACR,YAAMC,aAAa,GAACC,MAAM,CAACC,IAAP,CAAYH,IAAI,CAACI,KAAjB,EAAwB,CAAxB,CAApB;AACAtB,MAAAA,kBAAkB,CAAC,CAACkB,IAAI,CAACK,IAAN,EAAW,GAAGH,MAAM,CAACC,IAAP,CAAYH,IAAI,CAACI,KAAjB,CAAd,CAAD,CAAlB;AACApB,MAAAA,eAAe,CAACgB,IAAI,CAACK,IAAN,CAAf;AACAnB,MAAAA,aAAa,CAACe,aAAD,CAAb;AACAb,MAAAA,eAAe,CAACY,IAAI,CAACI,KAAL,CAAWH,aAAX,CAAD,CAAf;AACH,KARD;AASH,GAVQ,EAUP,EAVO,CAAT;AAYA,sBACI,uDACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAGI,oBAAC,WAAD;AACI,IAAA,eAAe,EAAEpB,eADrB;AAEI,IAAA,cAAc,EAAEE,YAFpB;AAGI,IAAA,gBAAgB,EAAEuB,CAAC,IAAEtB,eAAe,CAACsB,CAAC,CAACC,MAAF,CAASC,KAAV,CAHxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAQI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SARJ,eASI,oBAAC,WAAD;AACI,IAAA,eAAe,EAAE3B,eADrB;AAEI,IAAA,cAAc,EAAEI,UAFpB;AAGI,IAAA,gBAAgB,EAAEqB,CAAC,IAAEpB,aAAa,CAACoB,CAAC,CAACC,MAAF,CAASC,KAAV,CAHtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CADJ;AAiBH,CA5CD;;AA8CA,eAAe5B,GAAf","sourcesContent":["import React,{useEffect,useState} from 'react';\r\nimport './index.css';\r\nimport CurrencyRow from './CurrencyRow';\r\n\r\n\r\nconst BASE_URL=' https://api.ratesapi.io/api/latest';\r\n\r\n\r\nconst App = () => {\r\n    const [currencyOptions,setCurrencyOptions]=useState([])\r\n\r\n    const [fromCurrency,setFromCurrency]=useState();\r\n    const [toCurrency,setToCurrency]=useState();\r\n    const [exchangeRate,setExchangeRate]=useState();\r\n    const [amount,setAmount]=useState();\r\n    const [amountInFromCurrency,setAmountInFromCurrency]=useState(t);\r\n\r\n\r\n    let toAmount,fromAmount\r\n\r\n    if(amountInFromCurrency)\r\n\r\n\r\n    useEffect(()=>{\r\n        fetch(BASE_URL)\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n            const firstCurrency=Object.keys(data.rates)[0]\r\n            setCurrencyOptions([data.base,...Object.keys(data.rates)])\r\n            setFromCurrency(data.base)\r\n            setToCurrency(firstCurrency)\r\n            setExchangeRate(data.rates[firstCurrency])\r\n        })\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            <h1>Convert</h1>\r\n\r\n            <CurrencyRow \r\n                currencyOptions={currencyOptions}\r\n                selectCurrency={fromCurrency}\r\n                onChangeCurrency={e=>setFromCurrency(e.target.value)}\r\n            />\r\n            <div className='equal'>=</div>\r\n            <CurrencyRow \r\n                currencyOptions={currencyOptions}\r\n                selectCurrency={toCurrency}\r\n                onChangeCurrency={e=>setToCurrency(e.target.value)}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}